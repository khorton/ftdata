' Serial Data Softare  -- Displays and Records Serial Data transmitted' by the Engine Information System.' For EIS Software Versions with fuel flow.'' 9/10/02 Rev 6 - Renamed Dax5,Dax6 to Aux5, Aux6. Added processing to'                 calculate and display negative aux values.' 10/27/00 Rev 5 - Added message for port unavialable.' 6/26/00 Rev 4 - each interation printed to the file appears on one line'DECLARE SUB OneSample (sdata%())DIM SHARED cport$ON ERROR GOTO ErrorHandlerCONST Noitems = 66  'Number of unique words xmited by instrumentDIM d%(Noitems)dddd$ = "#####"ddpd$ = "###.#"ddd$ = "####"ddddpd$ = "####.#"dd$ = "###"ddddd$ = "######"ddpdd$ = "##.##"CLSPRINT "    Data Logging Software for the Engine Information System"PRINTPRINT "Press Cntl-Break to Exit Program."PRINT "Press L to turn logging of data to a file on and off."PRINT "To Stop Data Collection press any other Key."PRINTretry:INPUT "Which COM port will data be recieved on? Enter 1 or 2 for COM1 or COM2"; cport$IF cport$ <> "1" AND cport$ <> "2" THEN GOTO retry:cport$ = "COM" + cport$ + ":9600,n,8,1,CD0,CS0"   INPUT "Hit Enter to Start"; a$CLSPRINT "Flt Time Tach CHT1 CHT2 CHT3 CHT4 CHT5 CHT6 OilT/P OAT Volt Unit Flow Fuel Hours"PRINT "Aux5 Aux6 Crb EGT1 EGT2 EGT3 EGT4 EGT5 EGT6 Ax1 Ax2 Ax3 Ax4 Aspd  Alt VSI Baro"PRINT "--------------------------------------------------------------------------------"VIEW PRINT 4 TO 25Top:  a$ = INKEY$  IF a$ = "L" OR a$ = "l" THEN    logon = NOT (logon)    IF logon THEN      PRINT "Logging of Data Enabled to file EIS.dat"    OPEN "EIS.dat" FOR APPEND AS #2    PRINT #2, DATE$; "  "; TIME$    PRINT #2, "Flt Time Tach CHT1 CHT2 CHT3 CHT4 CHT5 CHT6 OilT/P OAT Volt Unit Flow Fuel Hours"    PRINT #2, "Aux5 Aux6 Crb EGT1 EGT2 EGT3 EGT4 EGT5 EGT6 Ax1 Ax2 Ax3 Ax4 Aspd  Alt VSI Baro"    PRINT #2, "--------------------------------------------------------------------------------"    ELSE      PRINT "Logging of Data Disabled"      CLOSE #2    END IF    a$ = ""  END IFretime:  IF TIMER - oldtime < 1 THEN GOTO retime:  oldtime = TIMER  CALL OneSample(d%())  tach% = d%(1) * 256 + d%(2)  CHT1% = d%(3) * 256 + d%(4)  CHT2% = d%(5) * 256 + d%(6)  CHT3% = d%(7) * 256 + d%(8)  CHT4% = d%(9) * 256 + d%(10)  CHT5% = d%(11) * 256 + d%(12)  CHT6% = d%(13) * 256 + d%(14)  EGT1% = d%(15) * 256 + d%(16)  EGT2% = d%(17) * 256 + d%(18)  EGT3% = d%(19) * 256 + d%(20)  EGT4% = d%(21) * 256 + d%(22)  EGT5% = d%(23) * 256 + d%(24)  EGT6% = d%(25) * 256 + d%(26)  FltHrs% = d%(60)  FltMin% = d%(61)  FltSec% = d%(62)  Volts = (d%(35) * 256 + d%(36)) * .1  UnitTemp% = d%(39)  Oat% = d%(42)  IF Oat% > 127 THEN    Oat% = Oat% - 256  END IF  OilTemp% = d%(43) * 256 + d%(44)  OilPress% = d%(45)   IF d%(46) < 128 THEN     Aux1 = (256 * d%(46) + d%(47))  ELSE     Aux1 = -256 * (255 - d%(46)) - (256 - d%(47))  END IF   IF d%(48) < 128 THEN     Aux2 = (256 * d%(48) + d%(49))  ELSE     Aux2 = -256 * (255 - d%(48)) - (256 - d%(49))  END IF   IF d%(50) < 128 THEN     Aux3 = (256 * d%(50) + d%(51))  ELSE     Aux3 = -256 * (255 - d%(50)) - (256 - d%(51))  END IF   IF d%(52) < 128 THEN     Aux4 = (256 * d%(52) + d%(53))  ELSE     Aux4 = -256 * (255 - d%(52)) - (256 - d%(53))  END IF   IF d%(27) < 128 THEN     Aux5 = (256 * d%(27) + d%(28))  ELSE     Aux5 = -256 * (255 - d%(27)) - (256 - d%(28))  END IF   IF d%(29) < 128 THEN     Aux6 = (256 * d%(29) + d%(30))  ELSE     Aux6 = -256 * (255 - d%(29)) - (256 - d%(30))  END IF  ETI = .1 * (256 * d%(56) + d%(57))  Aspd% = d%(31) * 256 + d%(32)  IF d%(33) < 175 THEN    ALT% = (d%(33) * 256 + d%(34)) * 10  ELSE    ALT% = 0  END IF  VSI% = d%(41)  Carb% = d%(40)  IF Carb% > 127 THEN    Carb% = Carb% - 256  END IF  IF VSI% > 127 THEN   VSI% = VSI% - 256  END IF  BARO = d%(65) * 256 + d%(66) * .01'' Fuel Flow Info'  fuelflow = .1 * (256 * d%(37) + d%(38))  IF d%(58) < 128 THEN    fuelqty = .1 * (256 * d%(58) + d%(59))  ELSE    fuelqty = 0  END IF  Fuelhrs% = d%(63)  Fuelmin% = d%(64)  Fuelhrs$ = RIGHT$(STR$(Fuelhrs%), 2)  IF LEFT$(Fuelhrs$, 1) = " " THEN Fuelhrs$ = "0" + RIGHT$(Fuelhrs$, 1)  Fuelmin$ = RIGHT$(STR$(Fuelmin%), 2)  IF LEFT$(Fuelmin$, 1) = " " THEN Fuelmin$ = "0" + RIGHT$(Fuelmin$, 1)  Fueltime$ = Fuelhrs$ + ":" + Fuelmin$' Flight Time into a formatted string  hrs$ = RIGHT$(STR$(FltHrs%), 2)  IF LEFT$(hrs$, 1) = " " THEN hrs$ = "0" + RIGHT$(hrs$, 1)  min$ = RIGHT$(STR$(FltMin%), 2)  IF LEFT$(min$, 1) = " " THEN min$ = "0" + RIGHT$(min$, 1)  sec$ = RIGHT$(STR$(FltSec%), 2)  IF LEFT$(sec$, 1) = " " THEN sec$ = "0" + RIGHT$(sec$, 1)  flttime$ = hrs$ + ":" + min$ + ":" + sec$   PRINT flttime$;'' printing to the screen'  PRINT USING dddd$; tach%; CHT1%; CHT2%; CHT3%; CHT4%; CHT5%; CHT6%;  PRINT USING ddd$; OilTemp%;  PRINT USING dd$; OilPress%;  PRINT USING ddd$; Oat%;  PRINT USING ddpd$; Volts;  PRINT USING ddd$; UnitTemp%; ' PRINT " ";  'PRINT Fueltime$;  PRINT USING ddpd$; fuelflow; fuelqty;  PRINT USING ddddpd$; ETI  PRINT USING ddd$; Aux5; Aux6;  PRINT USING dddd$; Carb%;  PRINT USING dddd$; EGT1%; EGT2%; EGT3%; EGT4%; EGT5%; EGT6%;  PRINT USING ddd$; Aux1; Aux2; Aux3; Aux4;  PRINT USING ddd$; Aspd%;  PRINT USING ddddd$; ALT%;  PRINT USING ddd$; VSI%;  PRINT USING ddpdd$; BARO     IF logon AND ABS(TIMER - oldtimer) > 1! THEN  oldtimer = TIMER'' printing to the file'  PRINT #2, flttime$;  PRINT #2, USING dddd$; tach%; CHT1%; CHT2%; CHT3%; CHT4%; CHT5%; CHT6%;  PRINT #2, USING ddd$; OilTemp%;  PRINT #2, USING dd$; OilPress%;  PRINT #2, USING ddd$; Oat%;  PRINT #2, USING ddpd$; Volts;  PRINT #2, USING ddd$; UnitTemp%;  PRINT #2, " ";  'Print #2, Fueltime$;  PRINT #2, USING ddpd$; fuelflow; fuelqty;  PRINT #2, USING ddddpd$; ETI;  PRINT #2, USING ddd$; Aux5; Aux6;  PRINT #2, USING dddd$; Carb%;  PRINT #2, USING dddd$; EGT1%; EGT2%; EGT3%; EGT4%; EGT5%; EGT6%;  PRINT #2, USING ddd$; Aux1; Aux2; Aux3; Aux4;  PRINT #2, USING ddd$; Aspd%;  PRINT #2, USING ddddd$; ALT%;  PRINT #2, USING ddd$; VSI%;  PRINT #2, USING ddpdd$; BARO     END IF  IF a$ = "" THEN GOTO Top:  CLOSEEND'Notes:'' Error Handler'''ErrorHandler:  CONST OVERFLOW = 6  CONST DIVIDEbyZERO = 11  CONST DeviceTimeout = 24  CONST DeviceFault = 25  CONST DeviceIOError = 57  CONST CommBufOF = 69  IF ERR = DeviceTimeout THEN'    PRINT "Error= "; ERR    ErrorFlag = True'    END    RESUME  END IF  IF ERR = DeviceFault OR ERR = DeviceIOError THEN    Dataloss = Dataloss + 1    IF NOT (ErrorPrinted) THEN      PRINT "Bad Serial Data Received. "; ERR; "  Occurances = "; Dataloss    END IF    ErrorPrinted = True    ErrorFlag = True    RESUME  END IF  IF ERR = CommBufOF THEN    PRINT "Communication Buffer Overflow"    CLOSE #1    OPEN "com1:9600,n,8,1,CD0,CS0" FOR RANDOM AS #1    RESUME  END IF  IF ERR = 68 THEN    PRINT "Serial Port Unavailable. Check to see if you are specifing the"    PRINT "correct COM port, and that no other software is currently using"    PRINT "it."    END  END IF  PRINT "Error = "; ERR  ENDSUB OneSample (sample%())DIM d%(4 * Noitems)DIM Hdr%(10)OPEN cport$ FOR RANDOM AS #1'A$ = INPUT$(1, #1)sample%(1) = 0DO WHILE sample%(1) <> 255 OR sample%(2) <> 254  a$ = INPUT$(1, #1)  sample%(2) = sample%(1)  sample%(1) = ASC(a$)LOOP  a$ = INPUT$(1, #1): ' an extra header wordFOR I = 1 TO Noitems - 2  a$ = INPUT$(1, #1)  sample%(I) = ASC(a$)NEXT ICLOSE #1GOTO samplefound:FOR I = 1 TO Noitems PRINT sample%(I); " ";NEXT Isamplefound:END SUB